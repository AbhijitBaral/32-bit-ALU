$date
	Mon May 12 18:22:27 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_shift_unit $end
$var wire 32 ! B [31:0] $end
$var reg 1 " A $end
$var reg 1 # L $end
$var reg 1 $ R $end
$var reg 32 % b [31:0] $end
$var reg 1 & drxn $end
$scope module uut $end
$var wire 1 " A $end
$var wire 1 # L $end
$var wire 1 $ R $end
$var wire 32 ' b [31:0] $end
$var wire 1 & drxn $end
$var wire 1 ( m0I0 $end
$var wire 1 ) m32I1 $end
$var wire 32 * B [31:0] $end
$scope begin gen_block[0] $end
$var parameter 2 + i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 , I [1:0] $end
$var wire 1 & sel $end
$var reg 1 - F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[1] $end
$var parameter 2 . i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 / I [1:0] $end
$var wire 1 & sel $end
$var reg 1 0 F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[2] $end
$var parameter 3 1 i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 2 I [1:0] $end
$var wire 1 & sel $end
$var reg 1 3 F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[3] $end
$var parameter 3 4 i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 5 I [1:0] $end
$var wire 1 & sel $end
$var reg 1 6 F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[4] $end
$var parameter 4 7 i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 8 I [1:0] $end
$var wire 1 & sel $end
$var reg 1 9 F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[5] $end
$var parameter 4 : i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 ; I [1:0] $end
$var wire 1 & sel $end
$var reg 1 < F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[6] $end
$var parameter 4 = i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 > I [1:0] $end
$var wire 1 & sel $end
$var reg 1 ? F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[7] $end
$var parameter 4 @ i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 A I [1:0] $end
$var wire 1 & sel $end
$var reg 1 B F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[8] $end
$var parameter 5 C i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 D I [1:0] $end
$var wire 1 & sel $end
$var reg 1 E F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[9] $end
$var parameter 5 F i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 G I [1:0] $end
$var wire 1 & sel $end
$var reg 1 H F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[10] $end
$var parameter 5 I i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 J I [1:0] $end
$var wire 1 & sel $end
$var reg 1 K F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[11] $end
$var parameter 5 L i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 M I [1:0] $end
$var wire 1 & sel $end
$var reg 1 N F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[12] $end
$var parameter 5 O i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 P I [1:0] $end
$var wire 1 & sel $end
$var reg 1 Q F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[13] $end
$var parameter 5 R i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 S I [1:0] $end
$var wire 1 & sel $end
$var reg 1 T F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[14] $end
$var parameter 5 U i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 V I [1:0] $end
$var wire 1 & sel $end
$var reg 1 W F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[15] $end
$var parameter 5 X i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 Y I [1:0] $end
$var wire 1 & sel $end
$var reg 1 Z F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[16] $end
$var parameter 6 [ i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 \ I [1:0] $end
$var wire 1 & sel $end
$var reg 1 ] F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[17] $end
$var parameter 6 ^ i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 _ I [1:0] $end
$var wire 1 & sel $end
$var reg 1 ` F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[18] $end
$var parameter 6 a i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 b I [1:0] $end
$var wire 1 & sel $end
$var reg 1 c F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[19] $end
$var parameter 6 d i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 e I [1:0] $end
$var wire 1 & sel $end
$var reg 1 f F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[20] $end
$var parameter 6 g i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 h I [1:0] $end
$var wire 1 & sel $end
$var reg 1 i F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[21] $end
$var parameter 6 j i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 k I [1:0] $end
$var wire 1 & sel $end
$var reg 1 l F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[22] $end
$var parameter 6 m i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 n I [1:0] $end
$var wire 1 & sel $end
$var reg 1 o F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[23] $end
$var parameter 6 p i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 q I [1:0] $end
$var wire 1 & sel $end
$var reg 1 r F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[24] $end
$var parameter 6 s i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 t I [1:0] $end
$var wire 1 & sel $end
$var reg 1 u F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[25] $end
$var parameter 6 v i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 w I [1:0] $end
$var wire 1 & sel $end
$var reg 1 x F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[26] $end
$var parameter 6 y i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 z I [1:0] $end
$var wire 1 & sel $end
$var reg 1 { F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[27] $end
$var parameter 6 | i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 } I [1:0] $end
$var wire 1 & sel $end
$var reg 1 ~ F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[28] $end
$var parameter 6 !" i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 "" I [1:0] $end
$var wire 1 & sel $end
$var reg 1 #" F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[29] $end
$var parameter 6 $" i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 %" I [1:0] $end
$var wire 1 & sel $end
$var reg 1 &" F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[30] $end
$var parameter 6 '" i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 (" I [1:0] $end
$var wire 1 & sel $end
$var reg 1 )" F $end
$upscope $end
$upscope $end
$upscope $end
$scope begin gen_block[31] $end
$var parameter 6 *" i $end
$scope begin genblk1 $end
$scope module mux $end
$var wire 2 +" I [1:0] $end
$var wire 1 & sel $end
$var reg 1 ," F $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b11111 *"
b11110 '"
b11101 $"
b11100 !"
b11011 |
b11010 y
b11001 v
b11000 s
b10111 p
b10110 m
b10101 j
b10100 g
b10011 d
b10010 a
b10001 ^
b10000 [
b1111 X
b1110 U
b1101 R
b1100 O
b1011 L
b1010 I
b1001 F
b1000 C
b111 @
b110 =
b101 :
b100 7
b11 4
b10 1
b1 .
b0 +
$end
#0
$dumpvars
1,"
b11 +"
1)"
b11 ("
1&"
b11 %"
1#"
b11 ""
1~
b11 }
1{
b11 z
1x
b11 w
1u
b11 t
1r
b11 q
1o
b11 n
1l
b11 k
1i
b11 h
1f
b11 e
1c
b11 b
1`
b11 _
1]
b11 \
1Z
b10 Y
1W
b11 V
0T
b0 S
1Q
b10 P
0N
b1 M
0K
b1 J
1H
b11 G
1E
b11 D
1B
b10 A
1?
b10 >
0<
b0 ;
09
b0 8
06
b0 5
03
b0 2
00
b0 /
0-
b0 ,
b11111111111111111101001111000000 *
1)
0(
b11111111111111111010011110000000 '
1&
b11111111111111111010011110000000 %
0$
0#
1"
b11111111111111111101001111000000 !
$end
#10
b11111111111111110100111100000000 !
b11111111111111110100111100000000 *
0?
0B
1K
1N
0Q
0Z
0&
#20
b1111111111111111101001111000000 !
b1111111111111111101001111000000 *
0,"
b1 +"
0)
1?
1B
0K
0N
1Q
1Z
1&
1#
0"
#30
b11111111111111110100111100000000 !
b11111111111111110100111100000000 *
0?
0B
1K
1N
0Q
0Z
1,"
0&
#40
b1111111111111111101001111000000 !
b1111111111111111101001111000000 *
b1 ,
1?
1B
0K
0N
1Q
1Z
0,"
1(
1&
0#
1$
#50
b11111111111111110100111100000001 !
b11111111111111110100111100000001 *
1-
0?
0B
1K
1N
0Q
0Z
1,"
0&
#60
